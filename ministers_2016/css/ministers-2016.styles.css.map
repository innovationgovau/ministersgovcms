{"version":3,"sources":["base/_buttons.scss","base/_variables.scss","bourbon/bourbon/library/_font-stacks.scss","bourbon/bourbon/library/_shade.scss","base/_forms.scss","ministers-2016.styles.css","base/_layout.scss","../libraries/susy/sass/susy/output/support/_rem.scss","../libraries/susy/sass/susy/language/susy/_container.scss","../libraries/susy/sass/susy/output/support/_clearfix.scss","base/_lists.scss","base/_media.scss","base/_tables.scss","base/_typography.scss","bourbon/bourbon/library/_modular-scale.scss","components/_header.scss","abstractions/_mixins.scss","../libraries/susy/sass/susy/language/susy/_breakpoint-plugin.scss","bourbon/bourbon/library/_clearfix.scss","../libraries/susy/sass/susy/language/susy/_span.scss","../libraries/susy/sass/susy/output/shared/_direction.scss","../libraries/susy/sass/susy/language/susy/_gutters.scss","../libraries/susy/sass/susy/output/float/_end.scss","../libraries/susy/sass/susy/language/susy/_rows.scss","components/_pane-ministers.scss","components/_pane-content-items.scss","components/_content-wrapper.scss","components/_footer.scss"],"names":[],"mappings":"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","file":"ministers-2016.styles.css","sourcesContent":["#{$all-buttons} {\n  appearance: none;\n  background-color: $action-color;\n  border: 0;\n  border-radius: $base-border-radius;\n  color: #fff;\n  cursor: pointer;\n  display: inline-block;\n  font-family: $base-font-family;\n  font-size: $base-font-size;\n  -webkit-font-smoothing: antialiased;\n  font-weight: 600;\n  line-height: 1;\n  padding: $small-spacing $base-spacing;\n  text-decoration: none;\n  transition: background-color $base-duration $base-timing;\n  user-select: none;\n  vertical-align: middle;\n  white-space: nowrap;\n\n  &:hover,\n  &:focus {\n    background-color: shade($action-color, 20%);\n    color: #fff;\n  }\n\n  &:disabled {\n    cursor: not-allowed;\n    opacity: 0.5;\n\n    &:hover {\n      background-color: $action-color;\n    }\n  }\n}\n","// Breakpoints\n$medium-screen: 600px;\n$large-screen: 900px;\n\n// Typography\n$base-font-family: \"Gotham A\", \"Gotham B\", $font-stack-helvetica;\n$heading-font-family: $base-font-family;\n\n// Font Sizes\n$base-font-size: 1em;\n\n// Line height\n$base-line-height: 1.5;\n$heading-line-height: 1.2;\n\n// Other Sizes\n$base-border-radius: 3px;\n$base-spacing: $base-line-height * 1em;\n$small-spacing: $base-spacing / 2;\n$base-z-index: 0;\n\n// Colors\n$blue: #005677;\n$light-gray: #F0F0F0;\n$medium-gray: #CFC3C3;\n$dark-gray: #333;\n$black: #000000;\n$white: #FFFFFF;\n\n// Font Colors\n$base-font-color: $dark-gray;\n$action-color: $blue;\n\n// Border\n$base-border-color: $light-gray;\n$base-border: 1px solid $base-border-color;\n\n// Background Colors\n$base-background-color: #fff;\n$secondary-background-color: tint($base-border-color, 75%);\n\n// Forms\n$form-box-shadow: inset 0 1px 3px rgba(#000, 0.06);\n$form-box-shadow-focus: $form-box-shadow, 0 0 5px adjust-color($action-color, $lightness: -5%, $alpha: -0.3);\n$material-box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);\n\n// Animations\n$base-duration: 150ms;\n$base-timing: ease;\n","@charset \"UTF-8\";\n\n////\n/// @type list\n///\n/// @link goo.gl/Cxb26i\n////\n\n$font-stack-helvetica: (\n  \"Helvetica Neue\",\n  \"Helvetica\",\n  \"Arial\",\n  sans-serif,\n);\n\n$font-stack-lucida-grande: (\n  \"Lucida Grande\",\n  \"Lucida Sans Unicode\",\n  \"Geneva\",\n  \"Verdana\",\n  sans-serif,\n);\n\n$font-stack-verdana: (\n  \"Verdana\",\n  \"Geneva\",\n  sans-serif,\n);\n\n$font-stack-system: (\n  -apple-system,\n  BlinkMacSystemFont,\n  \"Segoe UI\",\n  \"Roboto\",\n  \"Oxygen\",\n  \"Ubuntu\",\n  \"Cantarell\",\n  \"Fira Sans\",\n  \"Droid Sans\",\n  \"Helvetica Neue\",\n  sans-serif,\n);\n\n$font-stack-garamond: (\n  \"Garamond\",\n  \"Baskerville\",\n  \"Baskerville Old Face\",\n  \"Hoefler Text\",\n  \"Times New Roman\",\n  serif,\n);\n\n$font-stack-georgia: (\n  \"Georgia\",\n  \"Times\",\n  \"Times New Roman\",\n  serif,\n);\n\n$font-stack-hoefler-text: (\n  \"Hoefler Text\",\n  \"Baskerville Old Face\",\n  \"Garamond\",\n  \"Times New Roman\",\n  serif,\n);\n\n$font-stack-consolas: (\n  \"Consolas\",\n  \"monaco\",\n  monospace,\n);\n\n$font-stack-courier-new: (\n  \"Courier New\",\n  \"Courier\",\n  \"Lucida Sans Typewriter\",\n  \"Lucida Typewriter\",\n  monospace,\n);\n\n$font-stack-monaco: (\n  \"monaco\",\n  \"Consolas\",\n  \"Lucida Console\",\n  monospace,\n);\n","@charset \"UTF-8\";\n\n/// Mixes a color with black.\n///\n/// @argument {color} $color\n///\n/// @argument {number (percentage)} $percent\n///   The amount of black to be mixed in.\n///\n/// @return {color}\n///\n/// @example scss\n///   .element {\n///     background-color: shade(#ffbb52, 60%);\n///   }\n///\n/// @example css\n///   .element {\n///     background-color: #664a20;\n///   }\n\n@function shade(\n    $color,\n    $percent\n  ) {\n\n  @if not _is-color($color) {\n    @error \"`#{$color}` is not a valid color for the `$color` argument in \" +\n           \"the `shade` mixin.\";\n  } @else {\n    @return mix(#000, $color, $percent);\n  }\n}\n","fieldset {\n  background-color: transparent;\n  border: 0;\n  margin: 0;\n  padding: 0;\n}\n\nlegend {\n  font-weight: 600;\n  margin-bottom: $small-spacing / 2;\n  padding: 0;\n}\n\nlabel {\n  display: block;\n  font-weight: 600;\n  margin-bottom: $small-spacing / 2;\n}\n\ninput,\nselect,\ntextarea {\n  display: block;\n  font-family: $base-font-family;\n  font-size: $base-font-size;\n}\n\n#{$all-text-inputs},\nselect[multiple] {\n  background-color: $base-background-color;\n  border: $base-border;\n  border-radius: $base-border-radius;\n  box-shadow: $form-box-shadow;\n  box-sizing: border-box;\n  margin-bottom: $small-spacing;\n  padding: $base-spacing / 3;\n  transition: border-color $base-duration $base-timing;\n  width: 100%;\n\n  &:hover {\n    border-color: shade($base-border-color, 20%);\n  }\n\n  &:focus {\n    border-color: $action-color;\n    box-shadow: $form-box-shadow-focus;\n    outline: none;\n  }\n\n  &:disabled {\n    background-color: shade($base-background-color, 5%);\n    cursor: not-allowed;\n\n    &:hover {\n      border: $base-border;\n    }\n  }\n\n  &::placeholder {\n    color: $medium-gray;\n  }\n}\n\ntextarea {\n  resize: vertical;\n}\n\n[type=\"search\"] {\n  appearance: none;\n}\n\n[type=\"checkbox\"],\n[type=\"radio\"] {\n  display: inline;\n  margin-right: $small-spacing / 2;\n}\n\n[type=\"file\"] {\n  margin-bottom: $small-spacing;\n  width: 100%;\n}\n\nselect {\n  margin-bottom: $small-spacing;\n  max-width: 100%;\n  width: auto;\n}\n","button, .l-header .l-top-menu-wrapper .menu a, [type='button'], [type='reset'], [type='submit'] {\n  appearance: none;\n  background-color: #005677;\n  border: 0;\n  border-radius: 3px;\n  color: #fff;\n  cursor: pointer;\n  display: inline-block;\n  font-family: \"Gotham A\", \"Gotham B\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif;\n  font-size: 1em;\n  -webkit-font-smoothing: antialiased;\n  font-weight: 600;\n  line-height: 1;\n  padding: 0.75em 1.5em;\n  text-decoration: none;\n  transition: background-color 150ms ease;\n  user-select: none;\n  vertical-align: middle;\n  white-space: nowrap; }\n  button:hover, .l-header .l-top-menu-wrapper .menu a:hover, button:focus, .l-header .l-top-menu-wrapper .menu a:focus, [type='button']:hover, [type='button']:focus, [type='reset']:hover, [type='reset']:focus, [type='submit']:hover, [type='submit']:focus {\n    background-color: #00455f;\n    color: #fff; }\n  button:disabled, .l-header .l-top-menu-wrapper .menu a:disabled, [type='button']:disabled, [type='reset']:disabled, [type='submit']:disabled {\n    cursor: not-allowed;\n    opacity: 0.5; }\n    button:disabled:hover, .l-header .l-top-menu-wrapper .menu a:disabled:hover, [type='button']:disabled:hover, [type='reset']:disabled:hover, [type='submit']:disabled:hover {\n      background-color: #005677; }\n\nfieldset {\n  background-color: transparent;\n  border: 0;\n  margin: 0;\n  padding: 0; }\n\nlegend {\n  font-weight: 600;\n  margin-bottom: 0.375em;\n  padding: 0; }\n\nlabel {\n  display: block;\n  font-weight: 600;\n  margin-bottom: 0.375em; }\n\ninput,\nselect,\ntextarea {\n  display: block;\n  font-family: \"Gotham A\", \"Gotham B\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif;\n  font-size: 1em; }\n\n[type='color'], [type='date'], [type='datetime'], [type='datetime-local'], [type='email'], [type='month'], [type='number'], [type='password'], [type='search'], [type='tel'], [type='text'], [type='time'], [type='url'], [type='week'], input:not([type]), textarea,\nselect[multiple] {\n  background-color: #fff;\n  border: 1px solid #F0F0F0;\n  border-radius: 3px;\n  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.06);\n  box-sizing: border-box;\n  margin-bottom: 0.75em;\n  padding: 0.5em;\n  transition: border-color 150ms ease;\n  width: 100%; }\n  [type='color']:hover, [type='date']:hover, [type='datetime']:hover, [type='datetime-local']:hover, [type='email']:hover, [type='month']:hover, [type='number']:hover, [type='password']:hover, [type='search']:hover, [type='tel']:hover, [type='text']:hover, [type='time']:hover, [type='url']:hover, [type='week']:hover, input:not([type]):hover, textarea:hover,\n  select[multiple]:hover {\n    border-color: silver; }\n  [type='color']:focus, [type='date']:focus, [type='datetime']:focus, [type='datetime-local']:focus, [type='email']:focus, [type='month']:focus, [type='number']:focus, [type='password']:focus, [type='search']:focus, [type='tel']:focus, [type='text']:focus, [type='time']:focus, [type='url']:focus, [type='week']:focus, input:not([type]):focus, textarea:focus,\n  select[multiple]:focus {\n    border-color: #005677;\n    box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.06), 0 0 5px rgba(0, 68, 94, 0.7);\n    outline: none; }\n  [type='color']:disabled, [type='date']:disabled, [type='datetime']:disabled, [type='datetime-local']:disabled, [type='email']:disabled, [type='month']:disabled, [type='number']:disabled, [type='password']:disabled, [type='search']:disabled, [type='tel']:disabled, [type='text']:disabled, [type='time']:disabled, [type='url']:disabled, [type='week']:disabled, input:not([type]):disabled, textarea:disabled,\n  select[multiple]:disabled {\n    background-color: #f2f2f2;\n    cursor: not-allowed; }\n    [type='color']:disabled:hover, [type='date']:disabled:hover, [type='datetime']:disabled:hover, [type='datetime-local']:disabled:hover, [type='email']:disabled:hover, [type='month']:disabled:hover, [type='number']:disabled:hover, [type='password']:disabled:hover, [type='search']:disabled:hover, [type='tel']:disabled:hover, [type='text']:disabled:hover, [type='time']:disabled:hover, [type='url']:disabled:hover, [type='week']:disabled:hover, input:not([type]):disabled:hover, textarea:disabled:hover,\n    select[multiple]:disabled:hover {\n      border: 1px solid #F0F0F0; }\n  [type='color']::placeholder, [type='date']::placeholder, [type='datetime']::placeholder, [type='datetime-local']::placeholder, [type='email']::placeholder, [type='month']::placeholder, [type='number']::placeholder, [type='password']::placeholder, [type='search']::placeholder, [type='tel']::placeholder, [type='text']::placeholder, [type='time']::placeholder, [type='url']::placeholder, [type='week']::placeholder, input:not([type])::placeholder, textarea::placeholder,\n  select[multiple]::placeholder {\n    color: #CFC3C3; }\n\ntextarea {\n  resize: vertical; }\n\n[type=\"search\"] {\n  appearance: none; }\n\n[type=\"checkbox\"],\n[type=\"radio\"] {\n  display: inline;\n  margin-right: 0.375em; }\n\n[type=\"file\"] {\n  margin-bottom: 0.75em;\n  width: 100%; }\n\nselect {\n  margin-bottom: 0.75em;\n  max-width: 100%;\n  width: auto; }\n\nhtml {\n  box-sizing: border-box; }\n\n*,\n*::before,\n*::after {\n  box-sizing: inherit; }\n\n.l-page {\n  max-width: 960px;\n  margin-left: auto;\n  margin-right: auto; }\n  .l-page:after {\n    content: \" \";\n    display: block;\n    clear: both; }\n\nul,\nol,\n.menu .leaf {\n  list-style: none;\n  margin: 0;\n  padding: 0; }\n\ndl {\n  margin: 0; }\n\ndt {\n  font-weight: 600;\n  margin: 0; }\n\ndd {\n  margin: 0; }\n\nfigure {\n  margin: 0; }\n\nimg,\npicture {\n  margin: 0;\n  max-width: 100%;\n  height: auto; }\n\ntable {\n  border-collapse: collapse;\n  margin: 0.75em 0;\n  table-layout: fixed;\n  width: 100%; }\n\nth {\n  border-bottom: 1px solid #b4b4b4;\n  font-weight: 600;\n  padding: 0.75em 0;\n  text-align: left; }\n\ntd {\n  border-bottom: 1px solid #F0F0F0;\n  padding: 0.75em 0; }\n\ntr,\ntd,\nth {\n  vertical-align: middle; }\n\nbody {\n  color: #333;\n  font-family: \"Gotham A\", \"Gotham B\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif;\n  font-size: 1em;\n  line-height: 1.5; }\n\nh1 {\n  font-size: 1.76234em; }\n\nh2 {\n  font-size: 1.57352em; }\n\nh3 {\n  font-size: 1.40493em; }\n\nh4 {\n  font-size: 1.2544em; }\n\nh5 {\n  font-size: 1.12em; }\n\nh6 {\n  font-size: 1em; }\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-family: \"Gotham A\", \"Gotham B\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif;\n  line-height: 1.2;\n  margin: 0 0 0.75em;\n  font-weight: bold; }\n\np {\n  margin: 0 0 0.75em; }\n\na {\n  color: #005677;\n  text-decoration: none;\n  transition: color 150ms ease; }\n  a:active, a:focus, a:hover {\n    color: #004159; }\n    .l-content a:active, .l-content a:focus, .l-content a:hover {\n      text-decoration: underline; }\n\nhr {\n  border-bottom: 1px solid #F0F0F0;\n  border-left: 0;\n  border-right: 0;\n  border-top: 0;\n  margin: 1.5em 0; }\n\n.l-header {\n  margin-bottom: 0.75em; }\n  .l-header .l-top-menu-wrapper {\n    background-color: #005677;\n    margin-bottom: 0.75em; }\n    .l-header .l-top-menu-wrapper .menu {\n      display: flex;\n      flex-wrap: wrap;\n      justify-content: space-around; }\n      .l-header .l-top-menu-wrapper .menu li {\n        flex: 0 0 auto; }\n      .l-header .l-top-menu-wrapper .menu a {\n        color: #FFFFFF;\n        font-size: 80%; }\n        .l-header .l-top-menu-wrapper .menu a:hover {\n          color: #005677;\n          background-color: #FFFFFF; }\n    .l-header .l-top-menu-wrapper .menu-wrapper {\n      padding: 0.375em; }\n      .l-header .l-top-menu-wrapper .menu-wrapper.left {\n        border-bottom: 1px solid #FFFFFF; }\n  .l-header .l-branding {\n    margin: 0.75em 0; }\n  .l-header .front,\n  .l-header .active {\n    display: block;\n    height: 100%;\n    margin: 0 auto;\n    width: auto;\n    text-align: center; }\n  .l-header .l-header-bottom {\n    background-color: #F0F0F0;\n    border-top: 1px solid #CFC3C3;\n    border-bottom: 1px solid #CFC3C3; }\n  .l-header .l-main-menu-wrapper .menu {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center; }\n    .l-header .l-main-menu-wrapper .menu li {\n      flex: 0 0 auto; }\n      .l-header .l-main-menu-wrapper .menu li a {\n        display: block;\n        padding: 0.375em 0.75em;\n        margin: 1px;\n        transition: all 150ms ease; }\n        .l-header .l-main-menu-wrapper .menu li a:hover {\n          color: #FFFFFF;\n          background-color: #005677; }\n  .l-header .l-search-wrapper {\n    margin: 0.75em; }\n    .l-header .l-search-wrapper .container-inline {\n      display: flex; }\n      .l-header .l-search-wrapper .container-inline .form-type-textfield {\n        margin: 0 0.75em 0 0;\n        flex: 1 0 auto; }\n        .l-header .l-search-wrapper .container-inline .form-type-textfield input {\n          margin: 0;\n          height: 100%;\n          border: 1px solid #CFC3C3; }\n      .l-header .l-search-wrapper .container-inline .form-actions {\n        flex: 0 0 auto; }\n\n@media (min-width: 784px) {\n  .l-header .l-top-menu-wrapper::after {\n    clear: both;\n    content: \"\";\n    display: block; }\n  .l-header .l-top-menu-wrapper .menu-wrapper {\n    width: 49.15254%;\n    float: left;\n    margin-right: 1.69492%; }\n    .l-header .l-top-menu-wrapper .menu-wrapper.left {\n      margin-left: 0;\n      border-bottom: none; }\n      .l-header .l-top-menu-wrapper .menu-wrapper.left .menu {\n        justify-content: flex-start; }\n        .l-header .l-top-menu-wrapper .menu-wrapper.left .menu li {\n          margin-right: 0.75em; }\n    .l-header .l-top-menu-wrapper .menu-wrapper.right {\n      float: right;\n      margin-right: 0; }\n      .l-header .l-top-menu-wrapper .menu-wrapper.right .menu {\n        justify-content: flex-end; }\n        .l-header .l-top-menu-wrapper .menu-wrapper.right .menu li {\n          margin-left: 0.75em; }\n  .l-branding {\n    display: flex; }\n    .l-branding .block--views {\n      flex: 0 0 auto;\n      align-items: center;\n      display: flex; } }\n\n@media (min-width: 976px) {\n  .l-header {\n    margin-bottom: 1.5em; }\n    .l-header .l-top-menu-wrapper {\n      padding-left: 100%;\n      padding-right: 100%;\n      margin-left: -100%;\n      margin-right: -100%; }\n    .l-header .l-branding {\n      margin: 1.5em 0; }\n    .l-header .front {\n      text-align: left; }\n    .l-header .l-header-bottom {\n      padding-left: 100%;\n      padding-right: 100%;\n      margin-left: -100%;\n      margin-right: -100%;\n      padding-top: 0.75em;\n      padding-bottom: 0.75em;\n      display: flex;\n      align-items: center;\n      justify-content: space-between; }\n      .l-header .l-header-bottom::after {\n        clear: both;\n        content: \"\";\n        display: block; }\n    .l-header .l-main-menu-wrapper {\n      flex: 1 0 auto; }\n      .l-header .l-main-menu-wrapper .menu {\n        justify-content: flex-start; }\n        .l-header .l-main-menu-wrapper .menu li a {\n          padding: 0.75em;\n          margin: 0; }\n    .l-header .l-search-wrapper {\n      flex: 0 1 auto;\n      margin: 0; } }\n\n.pane-ministers {\n  padding: 0.75em; }\n  .pane-ministers .view-content {\n    display: flex;\n    flex-wrap: wrap; }\n  .pane-ministers .minister {\n    margin: 0.75em;\n    flex: 0 0 100%; }\n    .pane-ministers .minister img {\n      display: block;\n      margin: 0.75em auto;\n      height: auto;\n      border: 1px solid #CFC3C3; }\n\n@media (min-width: 784px) {\n  .pane-ministers .minister {\n    flex: 0 0 45%; }\n    .pane-ministers .minister img {\n      display: block;\n      margin: 0.75em auto;\n      height: auto; } }\n\n@media (min-width: 976px) {\n  .pane-ministers {\n    padding: 0;\n    margin-bottom: 1.5em; }\n    .pane-ministers .minister img {\n      margin: 0 0.75em 0 0;\n      float: left; } }\n\n.pane-content-items {\n  padding: 0.75em; }\n  .pane-content-items .date-display-single {\n    font-style: italic; }\n  .pane-content-items .item {\n    margin-bottom: 0.75em; }\n\n@media (min-width: 976px) {\n  .pane-content-items {\n    padding: 0; }\n    .pane-content-items .item {\n      margin-bottom: 1.5em; } }\n\n.content-wrapper {\n  padding: 0.75em; }\n  .content-wrapper .pane-content-items {\n    padding: 0; }\n\n.sidebar-right {\n  background-color: #F0F0F0;\n  padding: 0.75em;\n  border-radius: 3px; }\n  .sidebar-right h2 {\n    font-size: 1.2em; }\n\n@media (min-width: 784px) {\n  .content-wrapper::after {\n    clear: both;\n    content: \"\";\n    display: block; }\n  .main-content {\n    width: 66.10169%;\n    float: left;\n    margin-right: 1.69492%; }\n  .sidebar-right {\n    width: 32.20339%;\n    float: right;\n    margin-right: 0;\n    padding: 0.75em; } }\n\n@media (min-width: 976px) {\n  .sidebar-right {\n    padding: 1.5em; } }\n\n.l-footer {\n  background-color: #333;\n  font-size: 85%; }\n\n.l-footer-menu-wrapper {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  background-color: #333;\n  padding: 0.75em;\n  color: #FFFFFF; }\n  .l-footer-menu-wrapper a {\n    color: #FFFFFF; }\n    .l-footer-menu-wrapper a:hover {\n      text-decoration: underline; }\n  .l-footer-menu-wrapper > nav, .l-footer-menu-wrapper > div {\n    margin-bottom: 0.75em; }\n\n.footer-block {\n  flex: 0 0 100%; }\n  .footer-block h2 {\n    font-size: 1.2em; }\n  .footer-block li {\n    margin-bottom: 0.375em; }\n\n.l-copyright {\n  background-color: #F0F0F0; }\n  .l-copyright .block__content {\n    padding: 0.75em;\n    text-align: center; }\n  .l-copyright p {\n    margin: 0; }\n\n@media (min-width: 784px) {\n  .footer-block {\n    flex: 0 0 48%; }\n    .footer-block h2 {\n      font-size: 1.2em; }\n    .footer-block li {\n      margin-bottom: 0.375em; }\n  .l-copyright .block__content {\n    text-align: left; } }\n\n@media (min-width: 976px) {\n  .l-footer-menu-wrapper {\n    padding-left: 100%;\n    padding-right: 100%;\n    margin-left: -100%;\n    margin-right: -100%; }\n  .footer-block {\n    flex: 0 0 23%; }\n  .l-copyright {\n    padding-left: 100%;\n    padding-right: 100%;\n    margin-left: -100%;\n    margin-right: -100%; } }\n","html {\n  box-sizing: border-box;\n}\n\n*,\n*::before,\n*::after {\n  box-sizing: inherit;\n}\n\n// Layout\n\n$susy: (\n\tcontainer: 960px,\n);\n\n$tablet: 784px;\n$desktop: 976px;\n\n$tablet-columns: 12;\n$desktop-columns: 12;\n\n.l-page {\n\t@include container;\n}","// rem Support\n// ===========\n\n// rem\n// ---\n// Check for an existing support mixin, or output directly.\n// - $prop  : <css property>\n// - $val   : <css value>\n@mixin susy-rem(\n  $prop,\n  $val\n) {\n  $_reqs: (\n    variable: rhythm-unit rem-with-px-fallback,\n    mixin: rem,\n  );\n  @if susy-support(rem, $_reqs, $warn: false) and $rhythm-unit == rem {\n    @include rem($prop, $val);\n  } @else {\n    #{$prop}: $val;\n  }\n}\n","// Container Syntax\n// ================\n\n// Container [mixin]\n// -----------------\n// Set a container element\n// - [$layout]  : <settings>\n@mixin container(\n  $layout: $susy\n) {\n  $inspect    : $layout;\n  $layout     : parse-grid($layout);\n\n  $_width     : get-container-width($layout);\n  $_justify   : parse-container-position(susy-get(container-position, $layout));\n  $_property  : if(susy-get(math, $layout) == static, width, max-width);\n\n  $_box       : susy-get(box-sizing, $layout);\n\n  @if $_box {\n    @include output((box-sizing: $_box));\n  }\n\n  @include susy-inspect(container, $inspect);\n  @include float-container($_width, $_justify, $_property);\n  @include show-grid($layout);\n}\n\n// Container [function]\n// --------------------\n// Return container width\n// - [$layout]  : <settings>\n@function container(\n  $layout: $susy\n) {\n  $layout: parse-grid($layout);\n  @return get-container-width($layout);\n}\n\n// Get Container Width\n// -------------------\n// Calculate the container width\n// - [$layout]: <settings>\n@function get-container-width(\n  $layout: $susy\n) {\n  $layout         : parse-grid($layout);\n  $_width         : susy-get(container, $layout);\n  $_column-width  : susy-get(column-width, $layout);\n  $_math          : susy-get(math, $layout);\n\n  @if not($_width) or $_width == auto {\n    @if valid-column-math($_math, $_column-width) {\n      $_columns   : susy-get(columns, $layout);\n      $_gutters   : susy-get(gutters, $layout);\n      $_spread    : if(is-split($layout), wide, narrow);\n      $_width     : susy-sum($_columns, $_gutters, $_spread) * $_column-width;\n    } @else {\n      $_width: 100%;\n    }\n  }\n\n  @return $_width;\n}\n\n// Parse Container Position\n// ------------------------\n// Parse the $container-position into margin values.\n// - [$justify]   : left | center | right | <length> [<length>]\n@function parse-container-position(\n  $justify: map-get($susy-defaults, container-position)\n) {\n  $_return: if($justify == left, 0, auto) if($justify == right, 0, auto);\n\n  @if not(index(left right center, $justify)) {\n    $_return: nth($justify, 1);\n    $_return: $_return if(length($justify) > 1, nth($justify, 2), $_return);\n  }\n\n  @return $_return;\n}\n","// Susy Fallback Clearfix\n// ======================\n\n\n// Clearfix\n// --------\n// Check for an existing support mixin, or provide a simple fallback.\n@mixin susy-clearfix {\n  @if susy-support(clearfix, (mixin: clearfix)) {\n    @include clearfix;\n  } @else {\n    &:after {\n      content: \" \";\n      display: block;\n      clear: both;\n    }\n  }\n}\n","ul,\nol,\n.menu .leaf {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\ndl {\n  margin: 0;\n}\n\ndt {\n  font-weight: 600;\n  margin: 0;\n}\n\ndd {\n  margin: 0;\n}\n","figure {\n  margin: 0;\n}\n\nimg,\npicture {\n  margin: 0;\n  max-width: 100%;\n  height: auto;\n}\n","table {\n  border-collapse: collapse;\n  margin: $small-spacing 0;\n  table-layout: fixed;\n  width: 100%;\n}\n\nth {\n  border-bottom: 1px solid shade($base-border-color, 25%);\n  font-weight: 600;\n  padding: $small-spacing 0;\n  text-align: left;\n}\n\ntd {\n  border-bottom: $base-border;\n  padding: $small-spacing 0;\n}\n\ntr,\ntd,\nth {\n  vertical-align: middle;\n}\n","body {\n  color: $base-font-color;\n  font-family: $base-font-family;\n  font-size: $base-font-size;\n  line-height: $base-line-height;\n}\n@for $i from 1 through 6 {\n  h#{$i} {\n    font-size: modular-scale((6 - $i), 1em, 1.12);\n  }\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-family: $heading-font-family;\n  line-height: $heading-line-height;\n  margin: 0 0 $small-spacing;\n  font-weight: bold;\n}\n\np {\n  margin: 0 0 $small-spacing;\n}\n\na {\n  color: $action-color;\n  text-decoration: none;\n  transition: color $base-duration $base-timing;\n\n\n  &:active,\n  &:focus,\n  &:hover {\n    color: shade($action-color, 25%);\n    .l-content & {\n      text-decoration: underline;\n    }\n  }\n}\n\nhr {\n  border-bottom: $base-border;\n  border-left: 0;\n  border-right: 0;\n  border-top: 0;\n  margin: $base-spacing 0;\n}\n","@charset \"UTF-8\";\n\n/// Increments up or down a defined scale and returns an adjusted value. This\n/// helps establish consistent measurements and spacial relationships throughout\n/// your project. We provide a list of commonly used scales as\n/// [pre-defined variables][scales].\n///\n/// [scales]: https://github.com/thoughtbot/bourbon/blob/master/core/bourbon/settings/_scales.scss\n///\n/// @argument {number (unitless)} $increment\n///   How many steps to increment up or down the scale.\n///\n/// @argument {number (with unit) | list} $value [1em]\n///   The base value the scale starts at.\n///\n/// @argument {number (unitless)} $ratio [1.25]\n///   The ratio the scale is built on.\n///\n/// @return {number (with unit)}\n///\n/// @example scss\n///   .first-element {\n///     font-size: modular-scale(2);\n///   }\n///\n///   .second-element {\n///     margin-right: modular-scale(3, 2em);\n///   }\n///\n///   .third-element {\n///     font-size: modular-scale(3, 1em 1.6em, $major-seventh);\n///   }\n///\n///   // Globally change the base ratio\n///   $bourbon: (\n///     \"modular-scale-ratio\": 1.2,\n///   );\n///\n///   .fourth-element {\n///     font-size: modular-scale(3);\n///   }\n///\n/// @example css\n///   .first-element {\n///     font-size: 1.5625em;\n///   }\n///\n///   .second-element {\n///     margin-right: 3.90625em;\n///   }\n///\n///   .third-element {\n///     font-size: 3em;\n///   }\n///\n///   .fourth-element {\n///     font-size: 1.728em;\n///   }\n///\n/// @require {function} _retrieve-bourbon-setting\n\n@function modular-scale(\n    $increment,\n    $value: _retrieve-bourbon-setting(\"modular-scale-base\"),\n    $ratio: _retrieve-bourbon-setting(\"modular-scale-ratio\")\n  ) {\n\n  $v1: nth($value, 1);\n  $v2: nth($value, length($value));\n  $value: $v1;\n\n  // scale $v2 to just above $v1\n  @while $v2 > $v1 {\n    $v2: ($v2 / $ratio); // will be off-by-1\n  }\n  @while $v2 < $v1 {\n    $v2: ($v2 * $ratio); // will fix off-by-1\n  }\n\n  // check AFTER scaling $v2 to prevent double-counting corner-case\n  $double-stranded: $v2 > $v1;\n\n  @if $increment > 0 {\n    @for $i from 1 through $increment {\n      @if $double-stranded and ($v1 * $ratio) > $v2 {\n        $value: $v2;\n        $v2: ($v2 * $ratio);\n      } @else {\n        $v1: ($v1 * $ratio);\n        $value: $v1;\n      }\n    }\n  }\n\n  @if $increment < 0 {\n    // adjust $v2 to just below $v1\n    @if $double-stranded {\n      $v2: ($v2 / $ratio);\n    }\n\n    @for $i from $increment through -1 {\n      @if $double-stranded and ($v1 / $ratio) < $v2 {\n        $value: $v2;\n        $v2: ($v2 / $ratio);\n      } @else {\n        $v1: ($v1 / $ratio);\n        $value: $v1;\n      }\n    }\n  }\n\n  @return $value;\n}\n","// Header\n\n.l-header {\n\tmargin-bottom: $small-spacing;\n\t.l-top-menu-wrapper {\n\t\tbackground-color: $blue;\n\t\tmargin-bottom: $small-spacing;\n\t\t.menu {\n\t\t\tdisplay: flex;\n\t\t\tflex-wrap: wrap;\n\t\t\tjustify-content: space-around;\n\t\t\tli {\n\t\t\t\tflex: 0 0 auto;\n\t\t\t}\n\t\t\ta {\n\t\t\t\t@include button($blue, $white);\n\t\t\t\tcolor: $white;\n\t\t\t\tfont-size: 80%;\n\t\t\t}\n\t\t}\n\t\t.menu-wrapper {\n\t\t\tpadding: $small-spacing / 2;\n\t\t\t&.left {\n\t\t\t\tborder-bottom: 1px solid $white;\n\t\t\t}\n\t\t}\n\t}\n\t.l-branding {\n\t\tmargin: $small-spacing 0;\n\t}\n\t.front,\n\t.active {\n\t\tdisplay: block;\n\t\theight: 100%;\n\t\tmargin: 0 auto;\n\t\twidth: auto;\n\t\ttext-align: center;\n\t}\n\t.l-header-bottom {\n\t\tbackground-color: $light-gray;\n\t\tborder-top: 1px solid $medium-gray;\n\t\tborder-bottom: 1px solid $medium-gray;\n\t}\n\t.l-main-menu-wrapper {\n\t\t.menu {\n\t\t\tdisplay: flex;\n\t\t\tflex-wrap: wrap;\n\t\t\tjustify-content: center;\n\t\t\tli {\n\t\t\t\tflex: 0 0 auto;\n\t\t\t\ta {\n\t\t\t\t\tdisplay: block;\n\t\t\t\t\tpadding: $small-spacing / 2 $small-spacing;\n\t\t\t\t\tmargin: 1px;\n\t\t\t\t\ttransition: all $base-duration $base-timing;\n\t\t\t\t\t&:hover {\n\t\t\t\t\t\tcolor: $white;\n\t\t\t\t\t\tbackground-color: $blue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t.l-search-wrapper {\n\t\tmargin: $small-spacing;\n\t\t.container-inline {\n\t\t\tdisplay: flex;\n\t\t\t.form-type-textfield {\n\t\t\t\tmargin: 0 $small-spacing 0 0;\n\t\t\t\tflex: 1 0 auto;\n\t\t\t\tinput {\n\t\t\t\t\tmargin: 0;\n\t\t\t\t\theight: 100%;\n\t\t\t\t\tborder: 1px solid $medium-gray;\n\t\t\t\t}\n\t\t\t}\n\t\t\t.form-actions {\n\t\t\t\tflex: 0 0 auto;\n\t\t\t}\n\t\t}\n\t}\n}\n\n@include susy-breakpoint($tablet, $tablet-columns) {\n\t.l-header {\n\t\t.l-top-menu-wrapper {\n\t\t\t@include clearfix;\n\t\t\t.menu-wrapper {\n\t\t\t\t@include span($tablet-columns / 2 of $tablet-columns);\n\t\t\t\t&.left {\n\t\t\t\t\t@include first;\n\t\t\t\t\tborder-bottom: none;\n\t\t\t\t\t.menu {\n\t\t\t\t\t\tjustify-content: flex-start;\n\t\t\t\t\t\tli {\n\t\t\t\t\t\t\tmargin-right: $small-spacing;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t&.right {\n\t\t\t\t\t@include last;\n\t\t\t\t\t.menu {\n\t\t\t\t\t\tjustify-content: flex-end;\n\t\t\t\t\t\tli {\n\t\t\t\t\t\t\tmargin-left: $small-spacing;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t.l-branding {\n\t\tdisplay: flex;\n\t\t.block--views {\n\t\t\tflex: 0 0 auto;\n\t\t\talign-items: center;\n\t\t\tdisplay: flex;\n\t\t}\n\t}\n}\n\n@include susy-breakpoint($desktop, $desktop-columns) {\n\t.l-header {\n\t\tmargin-bottom: $base-spacing;\n\t\t.l-top-menu-wrapper {\n\t\t\t@include bleed;\n\t\t}\n\t\t.l-branding {\n\t\t\tmargin: $base-spacing 0;\n\t\t}\n\t\t.front {\n\t\t\ttext-align: left;\n\t\t}\n\t\t.l-header-bottom {\n\t\t\t@include bleed;\n\t\t\t@include clearfix;\n\t\t\tpadding-top: $small-spacing;\n\t\t\tpadding-bottom: $small-spacing;\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tjustify-content: space-between;\n\t\t}\n\t\t.l-main-menu-wrapper {\n\t\t\tflex: 1 0 auto;\n\t\t\t.menu {\n\t\t\t\tjustify-content: flex-start;\n\t\t\t\tli {\n\t\t\t\t\ta {\n\t\t\t\t\t\tpadding: $small-spacing;\n\t\t\t\t\t\tmargin: 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t.l-search-wrapper {\n\t\t\tflex: 0 1 auto;\n\t\t\tmargin: 0;\n\t\t}\n\t}\n}","// Mixins\n\n@mixin button($color: $white, $background: $blue) {\n\t@extend button;\n\t&:hover {\n\t\tcolor: $color;\n\t\tbackground-color: $background;\t\n\t}\n}\n\n@mixin bleed {\n\tpadding-left: 100%;\n\tpadding-right: 100%;\n\tmargin-left: -100%;\n\tmargin-right: -100%;\n}","// Breakpoint Integration\n// ======================\n\n$susy-media: () !default;\n$susy-media-fallback: false !default;\n\n$_susy-media-context: ();\n\n\n// Susy Breakpoint\n// ---------------\n// Change grids at different media query breakpoints.\n// - $query     : <min-width> [<max-width>] | <property> <value> | <map>\n// - $layout    : <settings>\n// - $no-query  : <boolean> | <selector>\n@mixin susy-breakpoint(\n  $query,\n  $layout: false,\n  $no-query: $susy-media-fallback\n) {\n  @include susy-media-router($query, $no-query) {\n    @if $layout {\n      @include with-layout($layout) {\n        @content;\n      }\n    } @else {\n      @content;\n    }\n  }\n}\n\n\n// Susy Media\n// ----------\n// - $query: <min-width> [<max-width>] | <property> <value>\n// - $no-query: <boolean> | <selector>\n@mixin susy-media(\n  $query,\n  $no-query: $susy-media-fallback\n) {\n  $old-context: $_susy-media-context;\n  $name: if(map-has-key($susy-media, $query), $query, null);\n  $query: susy-get-media($query);\n  $query: susy-parse-media($query);\n\n  @include susy-media-context($query, $name);\n\n  @if $no-query and type-of($no-query) != string {\n    @content;\n  } @else {\n    @media #{susy-render-media($query)} {\n      @content;\n    }\n\n    @if type-of($no-query) == string {\n      #{$no-query} & {\n        @content;\n      }\n    }\n  }\n\n  @include susy-media-context($old-context, $clean: true);\n}\n\n\n// Media Router\n// ------------\n// Rout media arguments to the correct mixin.\n@mixin susy-media-router(\n  $query,\n  $no-query: $susy-media-fallback\n) {\n  @if susy-support(breakpoint, (mixin: breakpoint), $warn: false) {\n    @include breakpoint($query, $no-query) {\n      @content;\n    }\n  } @else {\n    @include susy-media($query, $no-query) {\n      @content;\n    }\n  }\n}\n\n\n// Update Context\n// -------------\n// Set the new media context\n@mixin susy-media-context(\n  $query,\n  $name: null,\n  $clean: false\n) {\n  $query: map-merge((name: $name), $query);\n\n  @if $clean {\n    $_susy-media-context: $query !global;\n  } @else {\n    $_susy-media-context: map-merge($_susy-media-context, $query) !global;\n  }\n}\n\n\n// Media Context\n// -------------\n// Return the full media context, or a single media property (e.g. min-width)\n@function susy-media-context(\n  $property: false\n) {\n  @if $property {\n    @return map-get($_susy-media-context, $property);\n  } @else {\n    @return $_susy-media-context;\n  }\n}\n\n\n// Get Media\n// ---------\n// Return a named media-query from $susy-media.\n// - $name: <key>\n@function susy-get-media(\n  $name\n) {\n  @if map-has-key($susy-media, $name) {\n    $map-value: map-get($susy-media, $name);\n    @if ($name == $map-value) {\n      $name: $map-value;\n    } @else {\n      $name: susy-get-media($map-value);\n    }\n  }\n\n  @return $name;\n}\n\n\n// Render Media\n// ------------\n// Build a media-query string from various media settings\n@function susy-render-media(\n  $query\n) {\n  $output: null;\n  @each $property, $value in $query {\n    $string: null;\n\n    @if $property == media {\n      $string: $value;\n    } @else {\n      $string: '(#{$property}: #{$value})';\n    }\n\n    $output: if($output, '#{$output} and #{$string}', $string);\n  }\n\n  @return $output;\n}\n\n\n// Parse Media\n// -----------\n// Return parsed media-query settings based on shorthand\n@function susy-parse-media(\n  $query\n) {\n  $mq: null;\n  @if type-of($query) == map {\n    $mq: $query;\n  } @else if type-of($query) == number {\n    $mq: (min-width: $query);\n  } @else if type-of($query) == list and length($query) == 2 {\n    @if type-of(nth($query, 1)) == number {\n      $mq: (\n        min-width: min($query...),\n        max-width: max($query...),\n      );\n    } @else {\n      $mq: (nth($query, 1): nth($query, 2));\n    }\n  } @else {\n    $mq: (media: '#{$query}');\n  }\n\n  @return $mq;\n}\n","@charset \"UTF-8\";\n\n/// Provides an easy way to include a clearfix for containing floats.\n///\n/// @link http://goo.gl/yP5hiZ\n///\n/// @example scss\n///   .element {\n///     @include clearfix;\n///   }\n///\n/// @example css\n///   .element::after {\n///     clear: both;\n///     content: \"\";\n///     display: block;\n///   }\n\n@mixin clearfix {\n  &::after {\n    clear: both;\n    content: \"\";\n    display: block;\n  }\n}\n","// Span Syntax\n// ===========\n\n// Span [mixin]\n// ------------\n// Set a spanning element using shorthand syntax.\n// - $span  : <span>\n@mixin span(\n  $span\n) {\n  $inspect: $span;\n  $span: parse-span($span);\n  $output: span-math($span);\n  $nesting: susy-get(span, $span);\n  $clear: susy-get(clear, $span);\n\n  $box: susy-get(box-sizing, $span);\n  $content-box: if(susy-get(global-box-sizing) != 'border-box', true, false);\n  $box: $box or if(is-inside($span) and $content-box, border-box, null);\n\n  @if $clear == break {\n    @include break;\n  } @else if $clear == nobreak {\n    @include nobreak;\n  }\n\n  @include susy-inspect(span, $inspect);\n  @include output((box-sizing: $box));\n  @include float-span-output($output...);\n\n  @if valid-columns($nesting, silent) {\n    @include nested($span) { @content; }\n  } @else {\n    @content;\n  }\n}\n\n// Span [function]\n// ---------------\n// Return the width of a span.\n// - $span  : <span>\n@function span(\n  $span\n) {\n  @return get-span-width($span);\n}\n\n// Span Math\n// ---------\n// Get all the span results.\n// - $span: <map>\n@function span-math(\n  $span\n) {\n  $nest             : if(susy-get(role, $span) == nest, true, false);\n  $split-nest       : if(is-split($span) and $nest, true, false);\n  $edge             : get-edge($span);\n  $location         : get-location($span);\n\n  $float            : from;\n  $padding-before   : null;\n  $padding-after    : null;\n  $margin-before    : null;\n  $margin-after     : null;\n\n  // calculate widths\n  $spread: index(map-values($span), spread);\n  $span: if($split-nest and not($spread), map-merge($span, (spread: wide)), $span);\n  $width: get-span-width($span);\n  $gutters: get-gutters($span);\n\n  // apply gutters\n  @if is-inside($span) {\n    @if not(susy-get(role, $span)) {\n      $padding-before: map-get($gutters, before);\n      $padding-after: map-get($gutters, after);\n    }\n  } @else {\n    @if not($split-nest) {\n      $margin-before: map-get($gutters, before);\n      $margin-after: map-get($gutters, after);\n    }\n  }\n\n  // special margin handling\n  @if susy-get(output, $span) == isolate and $location {\n    $margin-before: get-isolation($span);\n    $margin-after: -100%;\n  } @else if $edge {\n    $is-split: is-split($span);\n    $pos: susy-get(gutter-position, $span);\n\n    @if $edge == last {\n      $float: susy-get(last-flow, $span);\n    }\n\n    @if not($is-split) {\n      @if $edge == full or ($edge == first and $pos == before) {\n        $margin-before: 0;\n      }\n      @if $edge == full or ($edge == last and $pos == after) {\n        $margin-after: 0;\n      }\n    }\n\n  }\n\n  @return (\n    width           : $width,\n    float           : $float,\n    margin-before   : $margin-before,\n    margin-after    : $margin-after,\n    padding-before  : $padding-before,\n    padding-after   : $padding-after,\n    flow            : susy-get(flow, $span),\n  );\n}\n\n// Get Span Width\n// --------------\n// Return span width.\n// - $span: <map>\n@function get-span-width(\n  $span\n) {\n  $span     : parse-span($span);\n\n  $n        : susy-get(span, $span);\n  $location : get-location($span);\n  $columns  : susy-get(columns, $span);\n  $gutters  : susy-get(gutters, $span);\n  $spread   : susy-get(spread, $span);\n\n  $context  : null;\n  $span-sum : null;\n  $width    : null;\n\n  @if $n == 'full' {\n    $pos: susy-get(gutter-position, $span);\n    $role: susy-get(role, $span);\n    $n: if($pos == split and $role != nest, susy-count($columns), 100%);\n  }\n\n  @if type-of($n) != number {\n    @warn \"(#{type-of($n)}) #{$n} is not a valid span.\";\n  } @else if unitless($n) {\n    $context: susy-sum($columns, $gutters, if(is-split($span), wide, narrow));\n    $spread: if(is-inside($span), $spread or wide, $spread);\n    $span-sum: susy($n, $location, $columns, $gutters, $spread);\n\n    $_math: susy-get(math, $span);\n    $_column-width: susy-get(column-width, $span);\n    @if $_math == static {\n      $width: $span-sum * valid-column-math($_math, $_column-width);\n    } @else {\n      $width: percentage($span-sum / $context);\n    }\n  } @else {\n    $width: $n;\n  }\n\n  @return $width;\n}\n","// Direction Helpers\n// =================\n\n// Susy Flow Defaults\n// ------------------\n// - PRIVATE\n@include susy-defaults((\n  flow: ltr,\n));\n\n// Get Direction\n// -------------\n// Return the 'from' or 'to' direction of a ltr or rtl flow.\n// - [$flow]  : ltr | rtl\n// - [$key]   : from | to\n@function get-direction(\n  $flow: map-get($susy-defaults, flow),\n  $key: from\n) {\n  $return: if($flow == rtl, (from: right, to: left), (from: left, to: right));\n  @return map-get($return, $key);\n}\n\n// To\n// --\n// Return the 'to' direction of a flow\n// - [$flow]  : ltr | rtl\n@function to(\n  $flow: map-get($susy-defaults, flow)\n) {\n  @return get-direction($flow, to);\n}\n\n// From\n// ----\n// Return the 'from' direction of a flow\n// - [$flow]  : ltr | rtl\n@function from(\n  $flow: map-get($susy-defaults, flow)\n) {\n  @return get-direction($flow, from);\n}\n","// Gutter Syntax\n// =============\n\n\n// Gutters\n// -------\n// Set gutters on an element.\n// - [$span]   : <settings>\n@mixin gutters(\n  $span: $susy\n) {\n  $inspect  : $span;\n  $span     : parse-gutters($span);\n  $_gutters : get-gutters($span);\n\n  $_output: (\n    before: map-get($_gutters, before),\n    after: map-get($_gutters, after),\n    flow: susy-get(flow, $span),\n  );\n\n  @include susy-inspect(gutters, $inspect);\n\n  @if is-inside($span) {\n    @include padding-output($_output...);\n  } @else {\n    @include margin-output($_output...);\n  }\n}\n\n@mixin gutter(\n  $span: $susy\n) {\n  @include gutters($span);\n}\n\n\n// Gutter\n// ------\n// Return the width of a gutter.\n// - [$span]   : <settings>\n@function gutter(\n  $span: $susy\n) {\n  $span: parse-gutters($span);\n\n  $_gutters: get-gutters($span);\n  $_gutters: map-get($_gutters, before) or map-get($_gutters, after);\n\n  @return $_gutters;\n}\n\n@function gutters(\n  $span: $susy\n) {\n  @return gutter($span);\n}\n\n\n// Get Gutter Width\n// ----------------\n// Return gutter width.\n// - [$context]: <context>\n@function get-gutter-width(\n  $context: $susy\n) {\n  $context  : parse-gutters($context);\n\n  $_gutters : susy-get(gutters, $context);\n  $_gutter  : susy-get(gutter-override, $context);\n\n  @if $_gutters and ($_gutters > 0) and not($_gutter) {\n    $_column-width: susy-get(column-width, $context);\n    $_math: gutter-math($context);\n    @if $_math == static {\n      $_gutter: $_gutters * valid-column-math($_math, $_column-width);\n    } @else {\n      $_columns : susy-get(columns, $context);\n      $_spread  : if(is-split($context), wide, susy-get(spread, $context));\n      $_gutter  : percentage($_gutters / susy-sum($_columns, $_gutters, $_spread));\n    }\n  }\n\n  $_gutter: if($_gutter == 'no-gutters' or $_gutter == 'no-gutter', null, $_gutter);\n\n  @return $_gutter;\n}\n\n\n// Get Gutters\n// -----------\n// Return before and after gutter values.\n// - [$context]: <context>\n@function get-gutters(\n  $context: $susy\n) {\n  $context            : parse-gutters($context);\n\n  $_gutter-position   : susy-get(gutter-position, $context);\n  $_gutter            : get-gutter-width($context);\n\n  $_return            : (before: null, after: null);\n\n  @if is-split($context) and $_gutter {\n    $_gutter: $_gutter / 2;\n    $_return: map-merge($_return, (before: $_gutter, after: $_gutter));\n  } @else {\n    $_return: map-merge($_return, ($_gutter-position: $_gutter));\n  }\n\n  @return $_return;\n}\n\n\n// Is Inside\n// ---------\n// Returns true if gutters are inside.\n// $context: <context>\n@function is-inside(\n  $context\n) {\n  $_inside: inside inside-static;\n  $_gutter-position: susy-get(gutter-position, $context);\n\n  @return if(index($_inside, $_gutter-position), true, false);\n}\n\n\n// Is Split\n// --------\n// Returns true if gutters are split.\n// $context: <context>\n@function is-split(\n  $context\n) {\n  $_split: split inside inside-static;\n  $_gutter-position: susy-get(gutter-position, $context);\n\n  @return if(index($_split, $_gutter-position), true, false);\n}\n\n\n// Gutter Math\n// -----------\n// Return the math to use for gutter calculations\n// $context: <context>\n@function gutter-math(\n  $context: $susy\n) {\n  $_return  : susy-get(math, $context);\n  $_return  : if(susy-get(gutter-position, $context) == inside-static, static, $_return);\n\n  @return $_return;\n}\n","// Float Ends API\n// ==============\n\n// Susy End Defaults\n// -----------------\n// - PRIVATE\n@include susy-defaults((\n  last-flow: to,\n));\n\n// Float Last\n// ----------\n// - [$flow]  : ltr | rtl\n@mixin float-last(\n  $flow: map-get($susy-defaults, flow),\n  $last-flow: map-get($susy-defaults, last-flow),\n  $margin: 0\n) {\n  $to: to($flow);\n\n  $output: (\n    float: if($last-flow == to, $to, null),\n    margin-#{$to}: $margin,\n  );\n\n  @include output($output);\n}\n\n// Float First\n// -----------\n// - [$flow]  : ltr | rtl\n@mixin float-first(\n  $flow: map-get($susy-defaults, flow)\n) {\n  $output: (\n    margin-#{from($flow)}: 0,\n  );\n\n  @include output($output);\n}\n","// Row Start & End\n// ===============\n\n// Break\n// -----\n// Apply to any element that should force a line break.\n@mixin break {\n  @include output((clear: both));\n}\n\n\n// NoBreak\n// -------\n// Cancel the break() effect, e.g. when using media queries.\n@mixin nobreak {\n  @include output((clear: none));\n}\n\n\n// Full\n// ----\n// - [$context]: <layout shorthand>\n@mixin full(\n  $context: $susy\n) {\n  $inspect : $context;\n  @include susy-inspect(full, $inspect);\n  @include span(full of parse-grid($context) break);\n}\n\n\n// First\n// -----\n// - [$context]: <settings>\n@mixin first(\n  $context: $susy\n) {\n  $inspect  : $context;\n  $context  : parse-grid($context);\n  $flow     : susy-get(flow, $context);\n\n  @include susy-inspect(first, $inspect);\n  @if not(is-split($context)) {\n    @include float-first($flow);\n  }\n}\n\n@mixin alpha(\n  $context: $susy\n) {\n  @include first($context);\n}\n\n\n// Last\n// ----\n// - [$context]: <settings>\n@mixin last(\n  $context: $susy\n) {\n  $inspect  : $context;\n  $context  : parse-grid($context);\n\n  @include susy-inspect(last, $inspect);\n\n  $output: (\n    flow: susy-get(flow, $context),\n    last-flow: susy-get(last-flow, $context),\n    margin: if(is-split($context), null, 0),\n  );\n\n  @include float-last($output...);\n}\n\n@mixin omega(\n  $context: $susy\n) {\n  @include last($context);\n}\n\n\n// Get Edge\n// --------\n// Calculate edge value based on location, if possible\n@function get-edge(\n  $span\n) {\n  $span       : parse-span($span);\n  $edge       : susy-get(edge, $span);\n\n  @if not($edge) {\n    $count: susy-count(susy-get(columns, $span));\n    $location: susy-get(location, $span);\n    $n: susy-get(span, $span);\n\n    $number: if(type-of($location) == number, true, false);\n    $index: if($number and unitless($location), true, false);\n\n    @if $n == $count {\n      $edge: full;\n    } @else if $location and $n and $index {\n      @if $location == 1 {\n        $edge: if($n == $count, full, first);\n      } @else if $location + $n - 1 == $count {\n        $edge: last;\n      }\n    }\n  }\n\n  @if $edge == alpha or $edge == omega {\n    $edge: if($edge == alpha, first, last);\n  }\n\n  @return $edge;\n}\n\n\n// Get Location\n// ------------\n// Calculate location value based on edge, if possible\n@function get-location(\n  $span\n) {\n  $span       : parse-span($span);\n  $location   : susy-get(location, $span);\n  $edge       : get-edge($span);\n  $n          : susy-get(span, $span);\n\n  @if $edge and not($location) and type-of($n) == number and unitless($n) {\n    @if $edge == first {\n      $location: 1;\n    } @else if $edge == last {\n      $location: susy-count(susy-get(columns, $span)) - $n + 1;\n    }\n  }\n\n  @return $location\n}\n","// pane-ministers\n\n.pane-ministers {\n\tpadding: $small-spacing;\n\t.view-content {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t}\n\t.minister {\n\t\tmargin: $small-spacing;\n\t\tflex: 0 0 100%;\n\t\timg {\n\t\t\tdisplay: block;\n\t\t\tmargin: $small-spacing auto;\n\t\t\theight: auto;\n\t\t\tborder: 1px solid $medium-gray;\n\t\t}\n\t}\n}\n\n@include susy-breakpoint($tablet, $tablet-columns) {\n\t.pane-ministers {\n\t\t.minister {\n\t\t\tflex: 0 0 45%;\n\t\t\timg {\n\t\t\t\tdisplay: block;\n\t\t\t\tmargin: $small-spacing auto;\n\t\t\t\theight: auto;\n\t\t\t}\n\t\t}\n\t}\n}\n\n@include susy-breakpoint($desktop, $desktop-columns) {\n\t.pane-ministers {\n\t\tpadding: 0;\n\t\tmargin-bottom: $base-spacing;\n\t\t.minister {\n\t\t\timg {\n\t\t\t\tmargin: 0 $small-spacing 0 0;\n\t\t\t\tfloat: left;\n\t\t\t}\n\t\t}\n\t}\n}","// pane-content-items\n\n.pane-content-items {\n\tpadding: $small-spacing;\n\t.date-display-single {\n\t\tfont-style: italic;\n\t}\n\t.item {\n\t\tmargin-bottom: $small-spacing;\n\t}\n}\n\n@include susy-breakpoint($desktop, $desktop-columns) {\n\t.pane-content-items {\n\t\tpadding: 0;\n\t\t.item {\n\t\t\tmargin-bottom: $base-spacing;\n\t\t}\n\t}\n}","// content-wrapper\n\n.content-wrapper {\n\tpadding: $small-spacing;\n\t.pane-content-items {\n\t\tpadding: 0;\n\t}\n}\n.sidebar-right {\n\tbackground-color: $light-gray;\n\tpadding: $small-spacing;\n\tborder-radius: $base-border-radius;\n\th2 {\n\t\tfont-size: $base-font-size * 1.2;\n\t}\n}\n\n@include susy-breakpoint($tablet, $tablet-columns) {\n\t.content-wrapper {\n\t\t@include clearfix;\n\t}\n\t.main-content {\n\t\t@include span(first $tablet-columns / $tablet-columns * 8 of $tablet-columns);\n\t}\n\t.sidebar-right {\n\t\t@include span(last $tablet-columns / $tablet-columns * 4 of $tablet-columns);\n\t\tpadding: $small-spacing;\n\t}\n}\n\n@include susy-breakpoint($desktop, $desktop-columns) {\n\t.sidebar-right {\n\t\tpadding: $base-spacing;\n\t}\n}\n","// Footer\n\n.l-footer {\n\tbackground-color: $dark-gray;\n\tfont-size: 85%;\n}\n.l-footer-menu-wrapper {\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tjustify-content: flex-start;\n\tbackground-color: $dark-gray;\n\tpadding: $small-spacing;\n\tcolor: $white;\n\ta {\n\t\tcolor: $white;\n\t\t&:hover {\n\t\t\ttext-decoration: underline;\n\t\t}\n\t}\n\t> nav, > div {\n\t\tmargin-bottom: $small-spacing;\n\t}\n}\n.footer-block {\n\tflex: 0 0 100%;\n\th2 {\n\t\tfont-size: $base-font-size * 1.2;\n\t}\n\tli {\n\t\tmargin-bottom: $small-spacing / 2;\n\t}\n}\n.l-copyright {\n\tbackground-color: $light-gray;\n\t.block__content {\n\t\tpadding: $small-spacing;\n\t\ttext-align: center;\n\t}\n\tp {\n\t\tmargin: 0;\n\t}\n}\n\n@include susy-breakpoint($tablet, $tablet-columns) {\n\t.footer-block {\n\t\tflex: 0 0 48%;\n\t\th2 {\n\t\t\tfont-size: $base-font-size * 1.2;\n\t\t}\n\t\tli {\n\t\t\tmargin-bottom: $small-spacing / 2;\n\t\t}\n\t}\n\t.l-copyright {\n\t\t.block__content {\n\t\t\ttext-align: left;\n\t\t}\n\t}\n}\n\n@include susy-breakpoint($desktop, $desktop-columns) {\n\t.l-footer-menu-wrapper {\n\t\t@include bleed;\n\t}\n\t.footer-block {\n\t\tflex: 0 0 23%;\n\t}\n\t.l-copyright {\n\t\t@include bleed;\n\t}\n}"],"sourceRoot":"/source/"}